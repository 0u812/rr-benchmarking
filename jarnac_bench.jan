// Benchmark names and paths (rel to directory this script resides in)
names = [ "jean_marie", 
          "jana_wolf_fixed2", 
          "biomod09", 
          "biomod14", 
          "biomod22", 
          "biomod33", 
          "00001", 
          "00002", 
          "00050", 
          "00100", 
          "00150", 
          "00200", 
          "00250", 
          "00300", 
          "00350", 
          "00400", 
          "00450", 
          "00500" ]

paths = ["jean_marie\\Jean_Marie_AMPA16_RobHow_v6.xml", 
         "jana_wolf\\Jana_WolfGlycolysis_fixed2.xml", 
         "biomod09\\BIOMD0000000009.xml", 
         "biomod14\\BIOMD0000000014.xml", 
         "biomod22\\BIOMD0000000022.xml", 
         "biomod33\\BIOMD0000000033.xml", 
         "00001\\00001-sbml-l2v4.xml", 
         "00002\\00002-sbml-l2v4.xml", 
         "00050\\00050-sbml-l2v4.xml", 
         "00100\\00100-sbml-l2v4.xml", 
         "00150\\00150-sbml-l2v4.xml", 
         "00200\\00200-sbml-l2v4.xml", 
         "00250\\00250-sbml-l2v4.xml", 
         "00300\\00300-sbml-l2v4.xml", 
         "00350\\00350-sbml-l2v4.xml", 
         "00400\\00400-sbml-l2v4.xml", 
         "00450\\00450-sbml-l2v4.xml", 
         "00500\\00500-sbml-l2v4.xml"]

println sys.version

// Benchmark three trials
for trial = 1 to 3 do
begin
  println "Trial ", trial
  println "Name,", "Load_time,", "Run_time,", "Total_time"
  for n = 1 to names.count do
  begin            
    name = names[n]
    path = paths[n]
    //println name, ": ", path
    
    bad_model = false
    if name == "jean_marie" then
      bad_model = true
    if name == "jana_wolf" then
      bad_model = true
    if name == "biomod09" then
      bad_model = true
    if name == "biomod22" then
      bad_model = true
    
    if bad_model == false then
    begin  
      // import SBML model
      //println "load model ", path
      t_load = timer 
      p = network(path)
      t_load = timer - t_load
      
      // set tolerances
      p.sim.rtol = 0.0001
      p.sim.atol = 1.000000E-007 
      p.sim.maxOrder = 5
    
      // simulate model
      //println "simulate model"
      t_sim = timer
      m = p.sim.eval (0, 50, 50);
      t_sim = timer - t_sim
    
      t_total = t_load + t_sim
    
      println name, ",", t_load/1000, ",", t_sim/1000, ",", t_total/1000
    end 
  end
end